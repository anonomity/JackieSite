{"expireTime":9007200916795051000,"key":"gatsby-plugin-mdx-entire-payload-99588776530c41ad5a5659b4e5daa721-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Hey you! Do you like video games? Do you like creating things? Are you afraid of programming? If you answered yes to any or all those\n questions then you've come to the right place. Today we are going to learn how to use an incredibly powerful and simple game engine! Yes,\n I said simple, you might think no game engine is simple, but if a caveman was magically transported to our time, he'd call a toilet \n complicated. So if you give me the opportunity I will show you how to make this game engine as simple as using a toilet. ","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":5,"column":123,"offset":534},"indent":[1,1,1]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":5,"column":123,"offset":534},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Downloading the damn thing!","position":{"start":{"line":7,"column":5,"offset":542},"end":{"line":7,"column":32,"offset":569},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":538},"end":{"line":7,"column":32,"offset":569},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"path\":\"/godot-ep-1\",\"date\":\"28-06-2026\",\"title\":\"How To Godot [EP 00]\",\"category\":\"GameDev\",\"tags\":[\"Godot\",\"youtube\",\"Game Development\"],\"exerpt\":\"Learn Godot\",\"status\":\"ðŸŒ±\"}","position":{"start":{"line":11,"column":1,"offset":576},"end":{"line":11,"column":206,"offset":781},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":11,"column":206,"offset":781}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"path\": \"/godot-ep-1\",\n  \"date\": \"28-06-2026\",\n  \"title\": \"How To Godot [EP 00]\",\n  \"category\": \"GameDev\",\n  \"tags\": [\"Godot\", \"youtube\", \"Game Development\"],\n  \"exerpt\": \"Learn Godot\",\n  \"status\": \"ðŸŒ±\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Hey you! Do you like video games? Do you like creating things? Are you afraid of programming? If you answered yes to any or all those\nquestions then you've come to the right place. Today we are going to learn how to use an incredibly powerful and simple game engine! Yes,\nI said simple, you might think no game engine is simple, but if a caveman was magically transported to our time, he'd call a toilet\ncomplicated. So if you give me the opportunity I will show you how to make this game engine as simple as using a toilet. `), mdx(\"h2\", null, `Downloading the damn thing!`));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"path\": \"/godot-ep-1\",\n  \"date\": \"28-06-2026\",\n  \"title\": \"How To Godot [EP 00]\",\n  \"category\": \"GameDev\",\n  \"tags\": [\"Godot\", \"youtube\", \"Game Development\"],\n  \"exerpt\": \"Learn Godot\",\n  \"status\": \"ðŸŒ±\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Hey you! Do you like video games? Do you like creating things? Are you afraid of programming? If you answered yes to any or all those\nquestions then you've come to the right place. Today we are going to learn how to use an incredibly powerful and simple game engine! Yes,\nI said simple, you might think no game engine is simple, but if a caveman was magically transported to our time, he'd call a toilet\ncomplicated. So if you give me the opportunity I will show you how to make this game engine as simple as using a toilet. `}</p>\n    <h2>{`Downloading the damn thing!`}</h2>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}