{"expireTime":9007200910298054000,"key":"gatsby-plugin-mdx-entire-payload-252d16c28fcdc5cf5f23fc47b466f77e-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Hypatia","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":10,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":10,"offset":11},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":3,"column":1,"offset":13},"end":{"line":3,"column":4,"offset":16},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Inventory","position":{"start":{"line":5,"column":4,"offset":23},"end":{"line":5,"column":13,"offset":32},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":20},"end":{"line":5,"column":13,"offset":32},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dialogue","position":{"start":{"line":7,"column":4,"offset":39},"end":{"line":7,"column":12,"offset":47},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":36},"end":{"line":7,"column":12,"offset":47},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Quests","position":{"start":{"line":9,"column":5,"offset":55},"end":{"line":9,"column":11,"offset":61},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":51},"end":{"line":9,"column":11,"offset":61},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"New Pixel Art","position":{"start":{"line":11,"column":4,"offset":68},"end":{"line":11,"column":17,"offset":81},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":65},"end":{"line":11,"column":17,"offset":81},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Enemy AI","position":{"start":{"line":13,"column":4,"offset":88},"end":{"line":13,"column":12,"offset":96},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":85},"end":{"line":13,"column":12,"offset":96},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Learned Godot Concepts","position":{"start":{"line":16,"column":3,"offset":104},"end":{"line":16,"column":25,"offset":126},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":102},"end":{"line":16,"column":25,"offset":126},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":17,"column":1,"offset":128},"end":{"line":17,"column":4,"offset":131},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"State Machines","position":{"start":{"line":18,"column":4,"offset":136},"end":{"line":18,"column":18,"offset":150},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":133},"end":{"line":18,"column":18,"offset":150},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Signals","position":{"start":{"line":20,"column":4,"offset":157},"end":{"line":20,"column":11,"offset":164},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":154},"end":{"line":20,"column":11,"offset":164},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Node Tree Structure","position":{"start":{"line":22,"column":4,"offset":171},"end":{"line":22,"column":23,"offset":190},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":168},"end":{"line":22,"column":23,"offset":190},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"path\":\"/hypatia6\",\"date\":\"18-06-2022\",\"title\":\"Hypatia Devlog # 6\",\"category\":\"GameDev\",\"tags\":[\"Godot\",\"youtube\",\"Game Development\"],\"exerpt\":\"Moving from Unity to Godot\",\"status\":\"ðŸŒ±\"}","position":{"start":{"line":27,"column":1,"offset":198},"end":{"line":27,"column":217,"offset":414},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":27,"column":217,"offset":414}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"path\": \"/hypatia6\",\n  \"date\": \"18-06-2022\",\n  \"title\": \"Hypatia Devlog # 6\",\n  \"category\": \"GameDev\",\n  \"tags\": [\"Godot\", \"youtube\", \"Game Development\"],\n  \"exerpt\": \"Moving from Unity to Godot\",\n  \"status\": \"ðŸŒ±\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, `Hypatia`), mdx(\"hr\", null), mdx(\"h2\", null, `Inventory`), mdx(\"h2\", null, `Dialogue`), mdx(\"h3\", null, `Quests`), mdx(\"h2\", null, `New Pixel Art`), mdx(\"h2\", null, `Enemy AI`), mdx(\"h1\", null, `Learned Godot Concepts`), mdx(\"hr\", null), mdx(\"h2\", null, `State Machines`), mdx(\"h2\", null, `Signals`), mdx(\"h2\", null, `Node Tree Structure`));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"path\": \"/hypatia6\",\n  \"date\": \"18-06-2022\",\n  \"title\": \"Hypatia Devlog # 6\",\n  \"category\": \"GameDev\",\n  \"tags\": [\"Godot\", \"youtube\", \"Game Development\"],\n  \"exerpt\": \"Moving from Unity to Godot\",\n  \"status\": \"ðŸŒ±\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Hypatia`}</h1>\n    <hr></hr>\n    <h2>{`Inventory`}</h2>\n    <h2>{`Dialogue`}</h2>\n    <h3>{`Quests`}</h3>\n    <h2>{`New Pixel Art`}</h2>\n    <h2>{`Enemy AI`}</h2>\n    <h1>{`Learned Godot Concepts`}</h1>\n    <hr></hr>\n    <h2>{`State Machines`}</h2>\n    <h2>{`Signals`}</h2>\n    <h2>{`Node Tree Structure`}</h2>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}